{# templates/booking/calendar.html.twig #}
{% extends 'base.html.twig' %}

{% block body %}

    {% set menuCode = 'main' %}
    {% set menuItem = knp_menu_get(menuCode, [],  {
        'comment': "This is an option passed in knp_menu_get",
        'menu_code'     : menuCode,
    }) %}

    {% set _menu_controller = 'mmenu' %}
    <div {{ stimulus_controller(_menu_controller) }}>
        <div {{ stimulus_target(_menu_controller, 'msg') }}>Message here.</div>
        <nav {{ stimulus_target(_menu_controller, 'menu') }}>

        {#                            todo: OptionsResolver for the theme #}
        {% set menuHtml = knp_menu_render(menuItem, {
            "template"      : "@SurvosBase/adminlte/knp_menu.html.twig",
            "debug": debug|default(false),
            currentAsLink: true,
            firstClass: 'f',
            "currentClass"  : "active",
            "ancestorClass" : "nav-item menu-open",
            "branch_class"  : "nav-item",
            'leaf_class'    : 'nav-item leaf',
            'link_class'    : 'nav-link',
            "allow_safe_labels": true,
            'rootAttributes': {
                id: 'root-element',
                'class': 'nav nav-pills nav-sidebar flex-column',
                'data-lte-toggle': 'treeview',
                'data-accordian': 'false',
                'role': 'menu'
            },

            'comment': "This is an option passed in knp_menu_render",
        })
        %}

        </nav>

    </div>

    {{ menuHtml|raw }}

{#    {{ dump(menuHtml) }}#}

    <h1>UX Demo</h1>

    <div>
        A playground for some UX tools that we use or may use.
    </div>

    This is a working example of using <a href="https://github.com/tattali/CalendarBundle">CalendarBundle</a>, which integrates events from a database within a Symfony application with <a href="https://fullcalendar.io/">FullCalendar.io</a>.



    {% embed '_partial/card.html.twig' with { links:
        {
        'CRUD example documentation' : 'https://github.com/tattali/CalendarBundle/blob/master/src/Resources/doc/doctrine-crud.md'
        }
    } %}
        {% block title 'Basic ' %}
        {% block subtitle 'Simple Booking Calendar' %}
        {% block text %}
            <p>
                This is <em>almost</em> exactly what is created following the basic Doctrine crud example on the bundle's documentation.
            </p>

            The exceptions:
            <ul>
                <li>The entity uses attributes instead of annotations</li>
            </ul>

        {% endblock %}

    {% endembed %}


    <p>
        A challenge of any demo site is how to present something attractive without complicating the code with the theme.  For this application, I did the following:
    </p>
    <ol>
        <li>Create the project with symfony: <code>symfony new --webapp calendar-bundle-demo</code>
        </li>
        <li>
            Add umbrella admin: <code>composer require umbrella2/adminbundle</code>
            and configure the menu.
        </li>
        <li>
            Install <a href="https://github.com/tattali/CalendarBundle">tattali/CalendarBundle</a>, and create the Booking.php entity, then create CRUD using <code>bin/console make:crud Booking</code>
        </li>
        <li>
            Change <code>base.html.twig</code> to extend the umbrella base, and add the sidebar.
        </li>
        <li>
            Change the <b>body</b> block to <b>content</b>, since that's what admin bundle uses.
        </li>
    </ol>

    <span class="fas fa-github"></span> Github

{% endblock %}
